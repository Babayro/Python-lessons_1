spiski = "ВЛОЖЕННЫЕ СПИСКИ РЕЗУЛЬТАТ РАБОТЫ ПРОГРАММЫ"
print(spiski)
# ЛЮБОЙ СПИСОК МОЖЕТ В СЕБЕ СОДЕРЖАТЬ ДРУГИЕ СПИСКИ.
nested_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10, 11]] # ПЕРВЫЙ ЭЛЕМЕНТ С КОНЦА ВСЕГДА МИНУС 1
print(nested_list)
# ВЫВОДИМ КОЛИЧЕСТВО СПИСКОВ ВО ВНЕШНЕМ СПИСКЕ
print(len(nested_list))
# ВЫВОДИМ КОЛИЧЕСТВО ЭЛЕМЕНТОВ ВО ВТОРОМ СПИСКЕ
print(len(nested_list[2]))
# ПЛУЧАЕМ ДОСТУП К ВНУТРЕННЕМУ СПИСКУ И ЭЛЕМЕНТУ ВНУТРЕННЕГО СПИСКА
print(nested_list[2][3])
# МЫ МОЖЕМ ОБРАТИТЬСЯ С КОНЦА К ВНУТРЕННИМУ СПИСКУ И ЭЛЕМЕНТУ ВНУТРИ СПИСКА
print(nested_list[-1][-4]) # ПЕРВЫЙ ЭЛЕМЕНТ С КОНЦА ВСЕГДА МИНУС 1
# РАСПЕЧАТКА ВЛОЖЕННЫХ СПИСКОВ
for inner in nested_list:
    print(inner)
# РАСПЕЧАТКА ВСЕХ ЭЛЕМЕНТОВ
for inner in nested_list: # ПЕРЕХОДИМ К ПЕРВОМУ ВНУТРЕННИМУ СПИСКУ
    for number in inner: # ПЕРЕБИРАЕМ ВСЕ ЗНАЧЕНИЯ В ПЕРВОМ ВНУТЕННЕМ СПИСК
        print(number) # РАСПЕЧАТЫВАЕМ ЗНАЧЕНИЯ ПЕРВОГО ВНУТРЕННИГО СПИСКА, И ЗАТЕМ ПЕРЕХОДИМ К СЛЕДУЮЩЕМУ СПИСКУ
# ВЫВОД ВСЕХ ЭЛЕМЕНТОВ СПИСКА С ИСПОЛЬЗОВАНИЕМ LIST COMPREHENSION
[[print(number) for number in inner_list] for inner_list in nested_list] # ЗАПИСЫВАЕТСЯ В ОБРАТНОМ ПОРЯДКЕ