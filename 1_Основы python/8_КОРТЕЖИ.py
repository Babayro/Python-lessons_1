# 5. КОРТЕЖИ TUPLES
кортежи = 'КОРТЕЖИ (TUPLES) РЕЗУЛЬТАТ РАБОТЫ ПРОГРАММЫ'
print(кортежи)
# КОРТЕЖИ ОЧЕНЬ ПОХОЖИ НА СПИСКИ, НО ОБЪЕКТЫ В НИХ, КАК И  В СТРОКАХ НЕ ПОДЛЕЖАТ ИЗМЕНЕНИЮ
# КОРТЕЖ-ЭТО УПОРЯДОЧЕННАЯ ПОСЛЕДОВАТЕЛЬНОСТЬ ЭЛЕМЕНТОВ
# МЫ НЕ МОЖЕМ ДОБАВИТЬ НОВОЕ ЗНАЧЕНИЕ ВНУТРИ
# tuples МОЖЕТ ЗАПИСЫВАТЬСЯ БЕЗ СКОБОК НО НЕ РЕКОМЕНДУЕТСЯ!!!
tuple_1 = 1, 2, 3
tuple_2 = ('one', 'hello')
tuple_3 = (3, 2.3, 'three')
print(tuple_1)
print(tuple_2)
print(tuple_3)
# К ЭЛЕМЕНТУ МЫ ОБРАЩАЕМСЯ ПО ИНДЕКСУ ТАКЖЕ КАК И В ЛИСТЕ
print(tuple_2[0])
# ЕСЛИ МЫ ХОТИМ ПОЛУЧИТЬ ОБЪЕКТ tuples ИЗ УЖЕ СУЩЕСТВУЮЩЕГО,
# ТО ПОСТУПАЕМ ТАКЖЕ КАК СО СТРОКАМИ, СОЗДАЁМ НОВУЮ ПЕРЕМЕННУЮ, СОЗДАЁМ НОВЫЙ tupple  ИЗ
# СТАРЫХ ЭЛЕМЕНТОВ КОРТЕЖА
# tuple_2[0] = 7 (БУДЕТ ОШИБКА)
# ВЫРЕЗАЕМ ЭЛЕМЕНТ КОТОРЫЙ МЕНЯЕМ, ВСТАВЛЯЕМ НОВЫЙ, ВСТАВЛЯЕМ КУДА НАДО В ПОСЛЕДОВАТЕЛЬНОСТЬ ЭЛЕМЕНТОВ КОРТЕЖА
new_tuple = (7, tuple_2[1])
print(new_tuple)
new_tuple_2 = (tuple_1[0], 'UP', tuple_1[2])
print(new_tuple_2)
# !!!КОРТЕЖИ НУЖНЫ ДЛЯ СОХРАНЕНИЯ НЕИЗМЕННЫХ ДАННЫХ, ЧТО-БЫ СЛУЧАЙНО ИХ НЕ ИЗМЕНИТЬ!!!
# ОЧЕНЬ УДОБНЫЙ СПОСОБ ИЗВЛЕЧЕНИЯ ДАННЫХ ИЗ tuple,
# РАСПАКОВКА ДАННЫХ ИЗ tuple
# В PYTONE ЕСТЬ ФИШКА ПРИСВОЕНИЕ НЕСКОЛЬКИМ ПЕРЕМЕННЫМ ОДНО ИЛИ НЕСКОЛЬКО ЗНАЧЕНИЙ
x = y = z = 12
print(x, y, z)
# ОДНО И ТОЖЕ ЗНАЧЕНИЕ МОЖНО ТАКЖЕ ПРИСВОИТЬ ЧЕРЕЗ ЗАПЯТУЮ
x, y, z = 12, 13, 14
print(x, y, z)
# ЭТУ ФИШКУ МЫ МОЖЕМ ИСПОЛЬЗОВАТЬ ПРИ РАСПАКОВКИ В tuple
person_tuple = ('Wiktor', 'Simonov', 1986)
# СОЗДАЁМ ПЕРЕМЕННЫЕ ДЛЯ ИЗВЛЕЧЕНИЯ ЭТИХ ДАННЫХ
name_person, last_name_person, year_of_berth = person_tuple
print(name_person, last_name_person, year_of_berth)
# МЕТОД count (СЧИТАТЬ) КОТОРЫЙ ОТОБРАЖАЕТ СКОЛЬКО РАЗ В КОРТЕЖЕ ВСТРЕЧАЕТСЯ ПАРАМЕТР С ОДНИМ И ТЕМ ЖЕ ЗНАЧЕНИЕМ)
t1 = (1, 2, 9, 9, 9, 3, 5, 8)
print(t1.count(9))
greetings_tuple = ('hi', 'up', 'up', 'up')
print(greetings_tuple.count('up'))
# МОТОД index ВЫВОДИТ ИНДЕКС НУЖНОГО НАМ ЭЛЕМЕНТА
print(greetings_tuple.index('up'))

# ДОМАШНЕЕ ЗАДАНИЕ

my_computer = ('Asus', '15,6 дюймов', '500 gb', '4GB' )
tade_mark, size_monitor, hdd, ram = my_computer
print(tade_mark,size_monitor, hdd, ram)